extends ../presentation-template

block title
    | Rx.js

block slides
    +titleSlide('Rx.js')

    section
        h3 Sposoby przekazywania danych w JS
        table
            tr: th &nbsp;
                th Jedna wartość
                th Wiele wartości
            tr: th Synchronicznie
                td Obiekt
                td Iterable/Collection
            tr: th Asynchronicznie
                td: strong Promise
                td: ul: li Zdarzenia
                        li Strumienie
                        li: strong Observable

    section
        h3 Rx.js = Observables + Operators + Schedulers

    section
        h3 Observable
        pre: code.
            function observe (observer) {
                observer.next(value);
                observer.error(new Error);
                ...
                observer.complete();
            }

    section
        h3 API Rx.js (w dużym uproszczeniu)
        pre: code.
            type Operator = (obs: Observable) => Observable;
            observable.&lt;operator&gt;(parameters): Observable;
            observable.pipe(...operators: Operator[]): Observable;
            observable.subscribe(onNext, onError, onComplete): Subscription;
            subscription.unsubscribe();

    section
        h3 Operatory
        pre: code.
            map(callback)
            filter(callback)
            reduce(callback, seed)
            mergeMap(callback)
            retry(count)
            debounceTime(delay)
            pluck(propertyName)
            ...

    section
        h3: a(href="http://rxmarbles.com/",target="_blank") RxMarbles

    section
        h3 Tworzenie nowych sekwencji
        pre: code.
            of(item)
            from(items)
            interval(time)
            fromPromise(promise)
            fromEvent(eventTarget, eventName)
            fromCallback(fn)
            ...

    section
        h3 Schedulery
        h4 Wprost się ich używa relatywnie rzadko
        ul
            li queue
            li asap
            li async
            li animationFrame
    section
        h3 Czy, gdzie i jak zacząć korzystać z Rx.js?
    section
        h3 Linki
        a(href="https://github.com/zenparsing/es-observable", target="_blank") Specyfikacja Observables
        br
        a(href="http://reactivex.io/rxjs/", target="_blank") Rx.js 5
        br
        a(href="https://kapke.github.io/slides/Rx.js in Angular2", target="blank") Prosty przykład użycia Rx.js w Angularze 2
        br
        a(href="https://github.com/kapke/cycle-clicker", target="blank") Prosty cookie clicker w Cycle.js
        br
        a(href="http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html",target="_blank") Lista operatorów w Rx.js
    +finalSlide
